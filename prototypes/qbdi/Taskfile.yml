# See https://taskfile.dev for more information
version: '3'

tasks:
  build:program:
    cmds:
      # Make the destination directory
      - mkdir -p bin

      # Compile the program ("-O1 -mpush-args" ensure the arguments are passed via the stack instead of registers)
      - g++ {{if eq .DEBUG "true"}} -g{{end}} -O1 -mpush-args src/main.cpp src/simple_math.cpp src/simple_math.hpp -o bin/main
    desc: Build the program
    label: 'build:program (Debug: {{eq .DEBUG "true"}})'
    silent: true
    sources:
      - src/main.cpp
      - src/simple_math.cpp
      - src/simple_math.hpp
    generates:
      - bin/main

  build:proxy:
    cmds:
      # Generate Makefiles
      - cmake -B lib {{if eq .DEBUG "true"}} -DDEBUG=ON{{end}} .

      # Build
      - cmake --build lib
    desc: Build the proxy
    label: 'build:proxy (Debug: {{eq .DEBUG "true"}})'
    silent: true
    sources:
      - CMakeLists.txt
      - src/proxy.cpp
    generates:
      - lib/*

  symbols:program:
    cmds:
      - nm -C bin/main | grep add
    deps:
      - build:program
    desc: Lists the relevant (filtered) symbols from the program
    silent: true

  symbols:proxy:
    cmds:
      - nm -C lib/libproxy.so | grep qbdipreload_on_run
    deps:
      - build:proxy
    desc: Lists the relevant (filtered) symbols from the proxy
    silent: true

  clean:
    cmds:
      # Delete the directories
      - cmd: rm bin lib -r
        ignore_error: true
    desc: Clean everything
    silent: true

  run:no-proxy:
    cmds:
      - bin/main
    deps:
      - build:program
    desc: Run the program without the proxy
    silent: true

  run:proxy:
    cmds:
      - bin/main
    deps:
      - build:program
      - build:proxy
    desc: Run the program with the proxy
    env:
      LD_BIND_NOW: 1
      LD_PRELOAD: ./lib/libproxy.so
    silent: true