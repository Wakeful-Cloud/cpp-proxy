# See https://taskfile.dev for more information
version: '3'

vars:
  FLAMEGRAPH: '{{default "~/flamegraph" .FLAMEGRAPH_HOME}}'

tasks:
  build:program:
    cmds:
      # Make the destination directory
      - mkdir -p bin

      # Compile the program
      - g++ {{if eq .DEBUG "true"}} -g{{end}} -I {{.INCLUDE}} src/main.cpp -o ./bin/main
    vars:
      # Headers
      INCLUDE: /usr/include/eigen3
    desc: Build the program
    label: 'build:program (Debug: {{eq .DEBUG "true"}}, include: {{.INCLUDE}})'
    silent: true
    sources:
      - src/main.cpp
    generates:
      - ./bin/main

  build:proxy:
    cmds:
      # Generate Makefiles
      - cmake -B lib {{if eq .DEBUG "true"}} -DDEBUG=ON{{end}} .

      # Build
      - cmake --build lib
    desc: Build the proxy
    label: 'build:proxy (Debug: {{eq .DEBUG "true"}})'
    silent: true
    sources:
      - CMakeLists.txt
      - src/proxy.cpp
    generates:
      - lib/*

  symbols:program:
    cmds:
      - nm -C ./bin/main | grep "Eigen::internal::general_matrix_matrix_product<.*>::run\(.*\)$"
    deps:
      - build:program
    desc: Lists the relevant (filtered) symbols from the program
    silent: true

  symbols:proxy:
    cmds:
      - nm -C lib/libproxy.so | grep qbdipreload_on_run
    deps:
      - build:proxy
    desc: Lists the relevant (filtered) symbols from the proxy
    silent: true

  profile:no-proxy:
    cmds:
      # Run the program
      - perf record --call-graph fp --freq max --output ./no-proxy.data ./bin/main

      # Generate a perf script, collapse, and convert to a flamegraph
      - perf script --input ./no-proxy.data | {{.FLAMEGRAPH}}/stackcollapse-perf.pl | {{.FLAMEGRAPH}}/flamegraph.pl > flamegraph-no-proxy.svg
    deps:
      - build:program
      - build:proxy
    desc: Profile the program without the proxy
    silent: true
    sources:
      - ./bin/main
    generates:
      - ./no-proxy.data
      - ./flamegraph-no-proxy.svg

  profile:proxy:
    cmds:
      # Run the program
      - perf record --call-graph fp --freq max --output ./proxy.data env LD_BIND_NOW=1 LD_PRELOAD=./lib/libproxy.so ./bin/main

      # Generate a perf script, collapse, and convert to a flamegraph
      - perf script --input ./proxy.data | {{.FLAMEGRAPH}}/stackcollapse-perf.pl | {{.FLAMEGRAPH}}/flamegraph.pl > flamegraph-proxy.svg
    deps:
      - build:program
      - build:proxy
    desc: Profile the program with the proxy
    silent: true
    sources:
      - ./bin/main
      - ./lib/libproxy.so
    generates:
      - ./proxy.data
      - ./flamegraph-proxy.svg

  clean:
    cmds:
      # Delete the directories
      - cmd: rm bin lib -r
        ignore_error: true
    desc: Clean everything
    silent: true

  run:no-proxy:
    cmds:
      - ./bin/main
    deps:
      - build:program
    desc: Run the program without the proxy
    silent: true

  run:proxy:
    cmds:
      - ./bin/main
    deps:
      - build:program
      - build:proxy
    desc: Run the program with the proxy
    env:
      LD_BIND_NOW: 1
      LD_PRELOAD: ./lib/libproxy.so
    silent: true